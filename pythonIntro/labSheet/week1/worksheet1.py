# docstring: 注释# __doc__ :表示module级别的docstring# function.__doc__: 表示方法里面的docstring'''USE: python <PROGNAME> (options)OPTIONS:-h : print this help message and exit-d FILE : use dictionary file FILE-i FILE : process text from input file FILE-o FILE : write results to output file FILE'''# Task3 定义方法# 定义加法functiondef addition(x,y):    x = int(x)    y = int(y)    print(x,'+',y,'=',x+y)addition(5,10)print('---------------------------------------')# task4# 文件接收commandline参数# sys.argv[1] 为文件名"""import sysa = sys.argv[1] # 第一个参数b = sys.argv[2] # 第二个参数def my_concat(x,y):    return f"{x} {y}"print(my_concat(a,b))"""# task5import sys, getoptopts, args = getopt.getopt(sys.argv[1:],'hd:i:o:')print(f"Options: {opts}")   # Do this to check variable content while debugging.print(f"Other Arguments: {opts}")opts = dict(opts) # Options converted to a dictionary objectprint(f"Options Dictionary: {args}")if len(args) > 0:    print("\n** ERROR: noarg files - only options! **", file=sys.stderr)if '-d' not in opts:    print("\n** ERROR: must speify dictionary (opt:-d)! **", file=sys.stderr)if '-i' not in opts:    print("\n** ERROR: must speify dictionary (opt:-i)! **", file=sys.stderr)if '-o' not in opts:    print("\n** ERROR: must speify dictionary (opt:-o)! **", file=sys.stderr)print('---------------------------------------')"""def tokenize(doc):    '''Tokenizes the specified document'''    return doc.split()print(__doc__)print(tokenize.__doc__)"""# Task 6 code exampledef printHelp():     progname = sys.argv[0]     progname = progname.split('\\')[-1] # strip out extended path if running the program from Spyder     help = __doc__.replace('<PROGNAME>', progname, 1) # replace the placeholder <PROGNAME> with the script filen     print('-' * 60, help, '-' * 60, file=sys.stderr)     sys.exit()if '-h' in opts:    printHelp()